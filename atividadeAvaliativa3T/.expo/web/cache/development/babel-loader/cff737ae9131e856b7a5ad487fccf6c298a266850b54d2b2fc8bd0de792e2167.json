{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Versão01 = function Versão01() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    valorA = _useState2[0],\n    setValorA = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    valorB = _useState4[0],\n    setValorB = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    resultado = _useState6[0],\n    setResultado = _useState6[1];\n  return _jsxs(View, {\n    style: styles.principalStyle,\n    children: [_jsxs(View, {\n      style: styles.inputViewStyle,\n      children: [_jsx(Text, {\n        style: styles.textStyle,\n        children: \"Valor A:\"\n      }), _jsx(TextInput, {\n        style: styles.txtInputStyle,\n        value: valorA,\n        onChangeText: function onChangeText(text) {\n          return setValorA(text);\n        }\n      }), _jsx(Text, {\n        style: styles.textStyle,\n        children: \"Valor B:\"\n      }), _jsx(TextInput, {\n        style: styles.txtInputStyle,\n        value: valorB,\n        onChangeText: function onChangeText(text) {\n          return setValorB(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.btnViewStyle,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.btnStyle,\n        onPress: function onPress() {\n          console.log('TouchableOpacity \"Soma\" pressed');\n          setResultado(parseFloat(valorA) + parseFloat(valorB));\n        },\n        title: \"Soma A + B\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.btnStyle,\n        onPress: function onPress() {\n          console.log('TouchableOpacity \"Subtracção\" pressed');\n          setResultado(parseFloat(valorA) - parseFloat(valorB));\n        },\n        title: \"Subtrai A - B\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.btnStyle,\n        onPress: function onPress() {\n          console.log('TouchableOpacity \"Multiplicação\" pressed');\n          setResultado(parseFloat(valorA) * parseFloat(valorB));\n        },\n        title: \"Multiplica A * B\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.btnStyle,\n        onPress: function onPress() {\n          console.log('TouchableOpacity \"Divisão\"pressed');\n          setResultado(parseFloat(valorA) / parseFloat(valorB));\n        },\n        title: \"Divide A / B\"\n      })]\n    }), _jsx(Text, {\n      style: styles.textStyle,\n      children: resultado\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  principalStyle: {\n    padding: 20,\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n    justifyContent: 'space-between'\n  },\n  inputViewStyle: {},\n  textStyle: {\n    fontSize: 25,\n    fontWeight: 'bold'\n  },\n  txtInputStyle: {\n    fontSize: 45,\n    borderColor: 'black',\n    borderWidth: 2\n  },\n  btnViewStyle: {\n    height: '50%',\n    justifyContent: 'space-between'\n  },\n  btnStyle: {\n    fontSize: 70\n  }\n});\nexport default Versão01;","map":{"version":3,"names":["React","useState","Text","StyleSheet","View","Button","TextInput","jsx","_jsx","jsxs","_jsxs","Versão01","_useState","_useState2","_slicedToArray","valorA","setValorA","_useState3","_useState4","valorB","setValorB","_useState5","_useState6","resultado","setResultado","style","styles","principalStyle","children","inputViewStyle","textStyle","txtInputStyle","value","onChangeText","text","btnViewStyle","TouchableOpacity","btnStyle","onPress","console","log","parseFloat","title","create","padding","width","height","flexDirection","justifyContent","fontSize","fontWeight","borderColor","borderWidth"],"sources":["C:/Users/bruno/Desktop/atividadeAvaliativa3T/src/screens/Versão01.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Text, StyleSheet, View, Button } from 'react-native'\nimport { TextInput } from 'react-native-web';\n\nconst Versão01 = () => {\n  const [valorA, setValorA] = useState(0)\n  const [valorB, setValorB] = useState(0)\n  const [resultado, setResultado] = useState(0)\n\n  return (\n    <View style={styles.principalStyle}>\n      <View style={styles.inputViewStyle}>\n        <Text style={styles.textStyle}>Valor A:</Text>\n        <TextInput \n        style={styles.txtInputStyle}\n        value={valorA}\n        onChangeText={(text) => setValorA(text)}\n        />\n\n        <Text style={styles.textStyle}>Valor B:</Text>\n        <TextInput \n        style={styles.txtInputStyle}\n        value={valorB}\n        onChangeText={(text) => setValorB(text)}></TextInput>\n      </View>\n\n      <View style={styles.btnViewStyle}>\n        <TouchableOpacity style={styles.btnStyle}\n          onPress={() => {\n            console.log('TouchableOpacity \"Soma\" pressed')\n            setResultado(parseFloat(valorA) + parseFloat(valorB))\n          }}\n          title=\"Soma A + B\" />\n\n        <TouchableOpacity style={styles.btnStyle}\n          onPress={() => {\n            console.log('TouchableOpacity \"Subtracção\" pressed')\n            setResultado(parseFloat(valorA) - parseFloat(valorB))\n          }}\n          title=\"Subtrai A - B\" />\n\n        <TouchableOpacity style={styles.btnStyle}\n          onPress={() => {\n            console.log('TouchableOpacity \"Multiplicação\" pressed')\n            setResultado(parseFloat(valorA) * parseFloat(valorB))\n          }}\n          title=\"Multiplica A * B\" />\n\n        <TouchableOpacity style={styles.btnStyle}\n          onPress={() => {\n            console.log('TouchableOpacity \"Divisão\"pressed')\n            setResultado(parseFloat(valorA) / parseFloat(valorB))\n          }}\n          title=\"Divide A / B\" />\n      </View>\n      <Text style={styles.textStyle}>{resultado}</Text>\n    </View>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  principalStyle: {\n    padding: 20,\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  },\n  inputViewStyle: {\n\n  },\n  textStyle: {\n    fontSize: 25,\n    fontWeight: 'bold',\n  },\n  txtInputStyle: {\n    fontSize: 45,\n    borderColor: 'black',\n    borderWidth: 2,\n  },\n  btnViewStyle: {\n    height: '50%',\n    justifyContent: 'space-between',\n\n  },\n  btnStyle: {\n    fontSize: 70,\n  }\n})\n\n// PART 4 - EXPORT THE COMPONENT SO WE CAN USE IT ELSEWHERE IN OUR PROJECT\nexport default Versão01\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}